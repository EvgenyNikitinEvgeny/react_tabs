{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","id","tabs","selectedTabId","onTabSelected","findTab","find","tab","className","map","classNames","href","onClick","handleTabClick","title","content","App","useState","selectedTab","setSelectedTab","selectedTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAA4B,SAAC,GAInC,IACgBC,EAJrBC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAaMC,GAXeJ,EAWOE,EAV1BD,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIN,KAAOA,MAC7BC,EAAK,IAWR,OAEE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAACF,GAAD,OACR,oBAEEC,UAAWE,IAAW,CACpB,YACCP,IAAkBI,EAAIN,KAEzB,UAAQ,MANV,SAQE,mBACEU,KAAI,WAAMJ,EAAIN,IACd,UAAQ,UACRW,QAAS,kBAzBA,SAACL,GAClBA,EAAIN,KAAOE,GACbC,EAAcG,GAuBWM,CAAeN,IAHhC,SAKGA,EAAIO,SAZFP,EAAIN,WAqBjB,qBACEO,UAAU,QACV,UAAQ,aAFV,SAIGH,EAAQU,cCzDJb,EAAO,CAClB,CAAED,GAAI,QAASa,MAAO,QAASC,QAAS,eACxC,CAAEd,GAAI,QAASa,MAAO,QAASC,QAAS,eACxC,CAAEd,GAAI,QAASa,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAAsCC,mBAASf,EAAK,GAAGD,IAAvD,mBAAOiB,EAAP,KAAoBC,EAApB,KAMMC,EAAa,UAAGlB,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIN,KAAOiB,YAAjC,aAAG,EAA4CJ,MAElE,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,KAEtB,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAee,EACfd,cAdiB,SAACG,GACtBY,EAAeZ,EAAIN,WCdvBoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5c5b12e5.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ninterface TabsProps {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = (id: string): Tab => (\n    tabs.find((tab) => tab.id === id)\n  || tabs[0]\n  );\n\n  const handleTabClick = (tab : Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const findTab = selectedTab(selectedTabId);\n\n  return (\n\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active':\n                 selectedTabId === tab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n\n          ))}\n        </ul>\n\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {findTab.content}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n\n  const settabSelected = (tab: Tab) => {\n    setSelectedTab(tab.id);\n  };\n\n  const selectedTitle = tabs.find((tab) => tab.id === selectedTab)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTitle}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab}\n        onTabSelected={settabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}